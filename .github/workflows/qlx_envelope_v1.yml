name: qlx-envelope-v1

on:
  workflow_dispatch: {}
  push:
    branches: ["**"]

jobs:
  envelope:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-python@v5
        with:
          python-version: "3.11"
          cache: "pip"

      - name: Install deps
        run: python -m pip install --upgrade pip && python -m pip install -r requirements.txt

      - name: Set PYTHONPATH
        run: echo "PYTHONPATH=src" >> "$GITHUB_ENV"

      - name: Generate Ed25519 keypair
        run: |
          python -c 'from cryptography.hazmat.primitives.asymmetric.ed25519 import Ed25519PrivateKey; from cryptography.hazmat.primitives import serialization; p=Ed25519PrivateKey.generate(); priv_hex=p.private_bytes(encoding=serialization.Encoding.Raw, format=serialization.PrivateFormat.Raw, encryption_algorithm=serialization.NoEncryption()).hex(); pub_hex=p.public_key().public_bytes(encoding=serialization.Encoding.Raw, format=serialization.PublicFormat.Raw).hex(); open("edk.env","w").write(f"ED25519_PRIV_HEX={priv_hex}\nED25519_PUB_HEX={pub_hex}\n")'
          cat edk.env >> "$GITHUB_ENV"

      - name: Build Ed25519-signed envelope
        run: python scripts/export_payloads.py --seed "qlx-demo-seed-phi369" --sig-alg ed25519 --ed25519-priv-hex "$ED25519_PRIV_HEX"

      - name: Validate envelope (schema + Ed25519 verify)
        run: python scripts/validate_envelope.py artifacts/photonic_env_signed.json --ed25519-pub-hex "$ED25519_PUB_HEX"

      - name: Upload envelope and validation
        uses: actions/upload-artifact@v4
          retention-days: 30
        with:
          name: envelope-verify
          path: |
            artifacts/photonic_env_signed.json
            artifacts/env_validation.json
